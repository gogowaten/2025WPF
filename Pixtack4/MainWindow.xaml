<Window x:Class="Pixtack4.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pixtack4"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:MainWindow}"
        Title="MainWindow" Height="300" Width="600"
        ResizeMode="CanResizeWithGrip"
        AllowDrop="True"
        Drop="Window_Drop">
  <Grid x:Name="MyRootGrid">
    <DockPanel>

      <DockPanel DockPanel.Dock="Top">
        <Grid Height="100">
          <TabControl>
            <TabItem Header="tab1">
              <StackPanel Orientation="Vertical">
                <WrapPanel>
                  <WrapPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                      <Setter Property="Margin" Value="2"/>
                    </Style>
                  </WrapPanel.Resources>
                  <Button Content="ウィンドウのリセット" Click="Button_Click_1"/>
                  <Button Content="Rootをリセット" Click="Button_Click_ResetRoot"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="名前を付けて保存" Click="Button_Click_SaveData"/>
                  <Button Content="上書き保存" Click="Button_Click_OverwriteSave"/>
                  <Button Content="FocusItemを名前を付けて保存" Click="Button_Click_SaveFocusItem"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="ファイルを開く(px4)" Click="Button_Click_OpenPx4File"/>
                  <Button Content="ファイルから追加" Click="Button_Click_OpenFile"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="Rootを画像で保存" Click="Button_Click_RootToImageFile"/>
                  <Button Content="Focusを画像で保存" Click="Button_Click_FocusItemToImageFile"/>
                  <Grid Background="Red" Width="10"/>
                  <Button Content="破線枠の表示切替" Click="Button_Click_SwitchWaku"/>
                  <Button Content="選択Itemを削除" Click="Button_Click_RemoveSelectedItems"/>

                  <TextBlock Text="👈️👆️できた｜まだ👇️👉️"/>

                  <Button Content="全削除"/>
                  <Button Content="確認" Click="Button_Click"/>
                </WrapPanel>
              </StackPanel>
            </TabItem>
            <TabItem Header="tab2" DataContext="{Binding MyAppData}">
              <StackPanel Orientation="Vertical">
                <TextBlock Text="{Binding CurrentOpenFilePath, StringFormat=CurrentOpenFilePath _ {0:0}}"/>
                <TextBlock Text="{Binding InitialDirectory, StringFormat=InitialDirectory _ {0:0}}"/>
                <TextBlock Text="{Binding IsFileNameDescendingOrder, StringFormat=IsFileNameDescendingOrder _ {0:0}}"/>
              </StackPanel>
            </TabItem>
          </TabControl>
        </Grid>
      </DockPanel>

      <!--最下段のStatusBar-->
      <DockPanel DockPanel.Dock="Bottom">
        <StatusBar x:Name="MyStatusBar">
          <TextBlock x:Name="MyStatusMessage" Text="statusbar" Foreground="White" Background="DodgerBlue" Padding="4,2" Margin="-1"/>
          <TextBlock x:Name="MyStatusCurrentFileName" Text="開いているファイル名" Foreground="White" Background="DodgerBlue" Padding="4,2" Margin="-1"/>

        </StatusBar>
      </DockPanel>

      <DockPanel DockPanel.Dock="Bottom">
        <Menu DockPanel.Dock="Left">
          <Menu.LayoutTransform>
            <RotateTransform Angle="90"/>
          </Menu.LayoutTransform>
          <Button Content="Menu"/>
          <Button Content="テスト用確認" Click="Button_Click"/>
          <Button Content="Root" Click="Button_Click_MyRootStatusPanelVisible"/>
          <Button Content="button3"/>
        </Menu>

        <Grid x:Name="MyGridMyItemsTree" DockPanel.Dock="Left" DataContext="{Binding MyRoot.MyThumbs, UpdateSourceTrigger=PropertyChanged}">
          <ScrollViewer>
            <TreeView ItemsSource="{Binding}">
              <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="local:RootThumb" ItemsSource="{Binding}">
                  <StackPanel Orientation="Vertical">
                    <TextBlock Text="{Binding MyThumbType}" VerticalAlignment="Center" Margin="10"/>
                    <!--<TextBlock Text="{Binding MyItemData.MyZIndex, StringFormat=z {0:0}}"/>
        <TextBlock Text="{Binding IsSelectable, StringFormat=selectable {0:0}}"/>
        <TextBlock Text="{Binding IsSelected, StringFormat=selected {0:0}}"/>-->
                    <Rectangle Width="50" Height="50">
                      <Rectangle.Fill>
                        <VisualBrush Visual="{Binding}" Stretch="Uniform"/>
                      </Rectangle.Fill>
                    </Rectangle>
                  </StackPanel>
                </HierarchicalDataTemplate>
              </TreeView.ItemTemplate>
            </TreeView>
          </ScrollViewer>
        </Grid>
        
        <Grid x:Name="MyRootStatusView" DockPanel.Dock="Left" DataContext="{Binding MyRoot, UpdateSourceTrigger=PropertyChanged}" Visibility="Visible">
          <StackPanel>
            <GroupBox Header="Root状態確認用" DataContext="{Binding UpdateSourceTrigger=PropertyChanged}">
              <StackPanel>
                <TextBlock Text="{Binding MyThumbs.Count, StringFormat=ItemsCount _ {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb, StringFormat=FocusItem _ {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.ActualWidth, StringFormat=width {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.ActualHeight, StringFormat=height {0:0}}"/>
                <TextBlock Text="{Binding MyFocusThumb.MyThumbType, StringFormat=type {0}}"/>
                <Rectangle Width="100" Height="100">
                  <Rectangle.Fill>
                    <VisualBrush Stretch="Uniform" Visual="{Binding MyFocusThumb, UpdateSourceTrigger=PropertyChanged}"/>
                    <!--<BitmapCacheBrush Target="{Binding MyFocusThumb, UpdateSourceTrigger=PropertyChanged}"/>-->
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle Width="100" Height="100" UseLayoutRounding="False">
                  <Rectangle.Fill>
                    <VisualBrush Stretch="Uniform" Visual="{Binding UpdateSourceTrigger=PropertyChanged}"/>
                  </Rectangle.Fill>
                </Rectangle>
              </StackPanel>
            </GroupBox>
          </StackPanel>
        </Grid>

        <StatusBar DockPanel.Dock="Right">
          <StatusBar.LayoutTransform>
            <RotateTransform Angle="90"/>
          </StatusBar.LayoutTransform>
          <StatusBarItem Content="item"/>
          <Button Content="StatusBar"/>
          <Button Content="テスト用確認" Click="Button_Click" Background="MidnightBlue" Foreground="White"/>
          <Button Content="button2"/>
          <Button Content="button3"/>
        </StatusBar>

        <ScrollViewer x:Name="MyScrollViewer" UseLayoutRounding="True" DockPanel.Dock="Right" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left" VerticalAlignment="Top">
          <Canvas Width="2000" Height="1000" Background="AliceBlue">
            <TextBlock>
               ScrollViewerの中の、ここがメインのパネルになる<LineBreak/>
            </TextBlock>
          </Canvas>
        </ScrollViewer>
      </DockPanel>

    </DockPanel>

  </Grid>
</Window>